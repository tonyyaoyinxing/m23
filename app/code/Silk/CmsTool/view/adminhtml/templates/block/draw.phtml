
<div id="app">
  <el-container style="height: 500px; border: 1px solid #eee">
    <el-aside width="200px" style="background-color: rgb(238, 241, 246)">
      <el-menu>
        <el-submenu index="1">
          <template slot="title"><i class="el-icon-message"></i>图片</template>
          <el-menu-item-group>
            <el-menu-item index="1-1">背景图</el-menu-item>
            <el-menu-item index="1-2">图片</el-menu-item>
          </el-menu-item-group>
        </el-submenu>
        <el-submenu index="2">
          <template slot="title"><i class="el-icon-menu"></i>视频</template>
          <el-menu-item-group>
            <el-menu-item index="2-1">视频</el-menu-item>
          </el-menu-item-group>
        </el-submenu>
        <el-submenu index="3">
          <template slot="title"><i class="el-icon-setting"></i>文本</template>
          <el-menu-item-group>
            <el-menu-item index="3-1">文本</el-menu-item>
          </el-menu-item-group>
        </el-submenu>
        <el-submenu index="3">
          <template slot="title"><i class="el-icon-setting"></i>时间</template>
          <el-menu-item-group>
            <el-menu-item index="3-1">倒计时</el-menu-item>
          </el-menu-item-group>
        </el-submenu>
      </el-menu>
    </el-aside>
    
    <el-container>
      <el-main>
        <div class="draw-main">
          <div class="list" id="list">
              <vue-drag-resize :parentW="200" :parentH="200" v-for="(rect, index) in elements"
                              :key="index" 
                              :w="rect.width"
                              :h="rect.height"
                              :x="rect.left"
                              :y="rect.top"
                              :parentW="listWidth"
                              :parentH="listHeight"
                              :axis="rect.axis"
                              :isActive="rect.active"
                              :minw="rect.minw"
                              :minh="rect.minh"
                              :isDraggable="rect.draggable"
                              :isResizable="rect.resizable"
                              :parentLimitation="true"
                              :snapToGrid="rect.snapToGrid"
                              :aspectRatio="rect.aspectRatio"
                              :z="rect.zIndex"
                              :contentClass="rect.class"
                              v-on:activated="activateEv(index)"
                              v-on:deactivated="deactivateEv(index)"
                              v-on:dragging="changePosition($event, index)"
                              v-on:resizing="changeSize($event, index)"
              >
                  <div class="filler" :style="{backgroundColor:rect.color}"></div>
              </vue-drag-resize>
          </div>
        </div>
      </el-main>
    </el-container>
  </el-container>
</div>
<script>
new Vue({
  el: '#app',
  data: function() {
    return {
       visible: false,
       isCollapse: true,
       listWidth: 0,
       listHeight: 0,
       elements:<?= json_encode($block->renderElements()) ?>,
    }
  },
  mounted() {
      let listEl = document.getElementById('list');
      this.listWidth = listEl.clientWidth;
      this.listHeight = listEl.clientHeight;
      window.addEventListener('resize', ()=>{
          this.listWidth = listEl.clientWidth;
          this.listHeight = listEl.clientHeight;
      })
  },

  computed: {
      rects() {
          //return this.$store.state.rect.rects
      }
  },

  methods: {
      activateEv(index) {
          //this.$store.dispatch('rect/setActive', {id: index});
      },

      deactivateEv(index) {
          //this.$store.dispatch('rect/unsetActive', {id: index});
      },

      changePosition(newRect, index) {

          // this.$store.dispatch('rect/setTop', {id: index, top: newRect.top});
          // this.$store.dispatch('rect/setLeft', {id: index, left: newRect.left});
          // this.$store.dispatch('rect/setWidth', {id: index, width: newRect.width});
          // this.$store.dispatch('rect/setHeight', {id: index, height: newRect.height});
      },

      changeSize(newRect, index) {
          // this.$store.dispatch('rect/setTop', {id: index, top: newRect.top});
          // this.$store.dispatch('rect/setLeft', {id: index, left: newRect.left});
          // this.$store.dispatch('rect/setWidth', {id: index, width: newRect.width});
          // this.$store.dispatch('rect/setHeight', {id: index, height: newRect.height});
      },
      handleOpen(key, keyPath) {
        console.log(key, keyPath);
      },
      handleClose(key, keyPath) {
        console.log(key, keyPath);
      }
  }
})
</script>